import React, { useEffect, useRef, useState } from 'react';
import styles from './AboutUs.module.css';
import { RocketOutlined, ExperimentOutlined, ToolOutlined, TeamOutlined, MailOutlined, PhoneOutlined, GlobalOutlined } from '@ant-design/icons';

const AboutUs: React.FC = () => {
    // Create refs for each section
    const sectionRefs = {
        heroRef: useRef<HTMLElement>(null),
        missionRef: useRef<HTMLElement>(null),
        fieldsRef: useRef<HTMLElement>(null),
        storyRef: useRef<HTMLElement>(null),
        valuesRef: useRef<HTMLElement>(null),
        teamRef: useRef<HTMLElement>(null),
        contactRef: useRef<HTMLElement>(null),
        galleryRef: useRef<HTMLElement>(null),
    };
    useEffect(() => {
        const hash = window.location.hash;
        if (hash) {
            const element = document.querySelector(hash);
            if (element) {
                setTimeout(() => {
                    element.scrollIntoView({
                        behavior: 'smooth',
                        block: 'center', // üëà ph·∫ßn n√†y gi√∫p ph·∫ßn t·ª≠ n·∫±m gi·ªØa m√†n h√¨nh
                    });
                }, 100); // Ch·ªù m·ªôt ch√∫t ƒë·ªÉ DOM render xong
            }
        }
    }, []);
    // State to track which sections are visible
    const [visibleSections, setVisibleSections] = useState<Record<string, boolean>>({
        hero: false,
        mission: false,
        fields: false,
        story: false,
        values: false,
        team: false,
        contact: false,
        gallery: false,
    });

    useEffect(() => {
        // Set up intersection observer
        const observerOptions = {
            root: null, // Use viewport as root
            rootMargin: '0px',
            threshold: 0.2, // 20% of the element must be visible
        };

        const observerCallback = (entries: IntersectionObserverEntry[]) => {
            entries.forEach((entry) => {
                // Get the section name from the data attribute
                const sectionName = entry.target.getAttribute('data-section');

                if (sectionName) {
                    setVisibleSections(prev => ({
                        ...prev,
                        [sectionName]: entry.isIntersecting
                    }));
                }
            });
        };

        const observer = new IntersectionObserver(observerCallback, observerOptions);

        // Observe all sections
        Object.values(sectionRefs).forEach(ref => {
            if (ref.current) {
                observer.observe(ref.current);
            }
        });

        // Clean up on component unmount
        return () => {
            observer.disconnect();
        };
    }, []);

    // Helper function to get animation classes
    const getAnimationClass = (sectionName: string, delayClass?: string) => {
        return visibleSections[sectionName]
            ? `${styles.sectionAnimation} ${delayClass ? styles[delayClass] : ''}`
            : '';
    };

    return (
        <div className={styles.aboutContainer}>
            <section
                ref={sectionRefs.heroRef}
                data-section="hero"
                className={`${styles.heroSection} ${getAnimationClass('hero')}`}
            >
                <div className={styles.heroBackground}></div>
                <div className={styles.heroOverlay}></div>

                <div className={styles.heroContent}>
                    <h1 className={styles.mainTitle}>V·ªÅ Ch√∫ng T√¥i</h1>
                    <p className={styles.description}>
                        <strong>N·ªÅn t·∫£ng h·ªçc l·∫≠p tr√¨nh k√©o th·∫£ ‚Äì h·ªó tr·ª£ xu·∫•t m√£ ra ph·∫ßn c·ª©ng</strong> nh∆∞ Arduino.
                        Trang web ƒë∆∞·ª£c thi·∫øt k·∫ø d√†nh cho h·ªçc sinh, gi√°o vi√™n v√† nh√† tr∆∞·ªùng, mang ƒë·∫øn m√¥i tr∆∞·ªùng h·ªçc t·∫≠p
                        hi·ªán ƒë·∫°i, tr·ª±c quan v√† d·ªÖ ti·∫øp c·∫≠n.
                    </p>
                    <p className={styles.description}>
                        T·∫°i ƒë√¢y, h·ªçc sinh c√≥ th·ªÉ tham gia c√°c <strong>kh√≥a h·ªçc l·∫≠p tr√¨nh</strong>, th·ª±c h√†nh tr·ª±c ti·∫øp
                        v·ªõi ph·∫ßn c·ª©ng, l√†m b√†i t·∫≠p v√† theo d√µi ti·∫øn ƒë·ªô.
                        Gi√°o vi√™n c√≥ th·ªÉ <strong>t·∫°o v√† qu·∫£n l√Ω l·ªõp h·ªçc</strong>, giao b√†i t·∫≠p, ch·∫•m ƒëi·ªÉm v√† h·ªó tr·ª£ h·ªçc
                        sinh trong qu√° tr√¨nh h·ªçc l·∫≠p tr√¨nh ph·∫ßn c·ª©ng.
                    </p>
                </div>
            </section>

            <section
                ref={sectionRefs.missionRef}
                data-section="mission"
                className={`${styles.missionSection} ${getAnimationClass('mission')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <RocketOutlined className={styles.icon} /> S·ª© M·ªánh
                </h2>
                <p>Ch√∫ng t√¥i mong mu·ªën ƒëem ƒë·∫øn:</p>
                <ul className={styles.missionList}>
                    <li>
                        Tr·∫£i nghi·ªám h·ªçc l·∫≠p tr√¨nh ƒë∆°n gi·∫£n, sinh ƒë·ªông, ph√π h·ª£p
                        v·ªõi m·ªçi h·ªçc sinh.
                    </li>
                    <li>
                        Gi·∫£i ph√°p hi·ªáu qu·∫£ cho gi√°o vi√™n trong vi·ªác gi·∫£ng d·∫°y
                        l·∫≠p tr√¨nh ph·∫ßn c·ª©ng.
                    </li>
                    <li>
                        C·∫ßu n·ªëi gi·ªØa c√¥ng ngh·ªá v√† gi√°o d·ª•c hi·ªán ƒë·∫°i, th√∫c ƒë·∫©y
                        phong tr√†o STEM trong tr∆∞·ªùng h·ªçc.
                    </li>
                </ul>
            </section>

            <section
                ref={sectionRefs.fieldsRef}
                data-section="fields"
                className={`${styles.fieldsSection} ${getAnimationClass('fields')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <ExperimentOutlined className={styles.icon} /> Lƒ©nh V·ª±c Ho·∫°t
                    ƒê·ªông
                </h2>
                <div className={styles.fieldsGrid}>
                    <div className={`${styles.fieldCard} ${getAnimationClass('fields', 'animateDelay1')}`}>
                        <div className={styles.fieldIcon}>üéì</div>
                        <div className={styles.fieldTitle}>
                            Gi√°o d·ª•c c√¥ng ngh·ªá (EdTech)
                        </div>
                    </div>
                    <div className={`${styles.fieldCard} ${getAnimationClass('fields', 'animateDelay2')}`}>
                        <div className={styles.fieldIcon}>üß©</div>
                        <div className={styles.fieldTitle}>
                            L·∫≠p tr√¨nh k√©o th·∫£ tr·ª±c quan
                        </div>
                    </div>
                    <div className={`${styles.fieldCard} ${getAnimationClass('fields', 'animateDelay1')}`}>
                        <div className={styles.fieldIcon}>ü§ñ</div>
                        <div className={styles.fieldTitle}>
                            L·∫≠p tr√¨nh ph·∫ßn c·ª©ng (Arduino, IoT)
                        </div>
                    </div>
                    <div className={`${styles.fieldCard} ${getAnimationClass('fields', 'animateDelay2')}`}>
                        <div className={styles.fieldIcon}>üë®‚Äçüè´</div>
                        <div className={styles.fieldTitle}>
                            H·ªó tr·ª£ gi√°o vi√™n v√† nh√† tr∆∞·ªùng
                        </div>
                    </div>
                </div>
            </section>

            <section
                ref={sectionRefs.storyRef}
                data-section="story"
                className={`${styles.storySection} ${getAnimationClass('story')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <ToolOutlined className={styles.icon} /> C√¢u Chuy·ªán H√¨nh
                    Th√†nh
                </h2>

                <div className={`${styles.storyBlock} ${getAnimationClass('story', 'animateDelay1')}`}>
                    <h3>üí° D·ª± √°n b·∫Øt ƒë·∫ßu nh∆∞ th·∫ø n√†o?</h3>
                    <p>
                        Ch√∫ng t√¥i l√† hai sinh vi√™n tr∆∞·ªùng{' '}
                        <strong>ƒê·∫°i h·ªçc C√¥ng ngh·ªá ‚Äì UET</strong>, c√πng th·ª±c hi·ªán
                        d·ª± √°n n√†y nh∆∞ m·ªôt ph·∫ßn c·ªßa{' '}
                        <strong>kho√° lu·∫≠n t·ªët nghi·ªáp</strong>. Xu·∫•t ph√°t t·ª´ ƒëam
                        m√™ v·ªõi l·∫≠p tr√¨nh ph·∫ßn c·ª©ng v√† mong mu·ªën t·∫°o ra ƒëi·ªÅu g√¨
                        ƒë√≥ th·∫≠t √Ω nghƒ©a cho gi√°o d·ª•c.
                    </p>
                </div>

                <div className={`${styles.storyBlock} ${getAnimationClass('story', 'animateDelay2')}`}>
                    <h3>üß© V·∫•n ƒë·ªÅ ch√∫ng t√¥i mu·ªën gi·∫£i quy·∫øt</h3>
                    <ul>
                        <li>
                            H·ªçc sinh g·∫∑p kh√≥ khƒÉn khi h·ªçc l·∫≠p tr√¨nh ph·∫ßn c·ª©ng do
                            r√†o c·∫£n v·ªÅ c√∫ ph√°p v√† c√¥ng c·ª•.
                        </li>
                        <li>
                            Gi√°o vi√™n thi·∫øu n·ªÅn t·∫£ng thu·∫≠n ti·ªán ƒë·ªÉ giao b√†i,
                            h∆∞·ªõng d·∫´n, theo d√µi v√† ƒë√°nh gi√° h·ªçc sinh.
                        </li>
                    </ul>
                </div>

                <div className={`${styles.storyBlock} ${getAnimationClass('story', 'animateDelay3')}`}>
                    <h3>üöÄ H√†nh tr√¨nh ph√°t tri·ªÉn</h3>
                    <p>
                        T·ª´ nh·ªØng ng√†y ƒë·∫ßu v·ªõi b·∫£n ph√°c th·∫£o tr√™n gi·∫•y, ch√∫ng t√¥i
                        ƒë√£ li√™n t·ª•c c·∫£i ti·∫øn v√† x√¢y d·ª±ng s·∫£n ph·∫©m v·ªõi tinh th·∫ßn
                        h·ªçc h·ªèi, s√°ng t·∫°o v√† h∆∞·ªõng t·ªõi ng∆∞·ªùi d√πng. D·ª± √°n hi·ªán
                        ƒëang ƒë∆∞·ª£c ho√†n thi·ªán v√† tr√¨nh h·ªôi ƒë·ªìng ch·∫•m t·ªët nghi·ªáp.
                    </p>
                </div>
            </section>

            <section
                ref={sectionRefs.valuesRef}
                data-section="values"
                className={`${styles.valuesSection} ${getAnimationClass('values')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <ExperimentOutlined className={styles.icon} /> Gi√° Tr·ªã C·ªët
                    L√µi
                </h2>
                <div className={styles.valuesGrid}>
                    <div className={`${styles.valueCard} ${getAnimationClass('values', 'animateDelay1')}`}>
                        <div className={styles.valueIcon}>üéì</div>
                        <h3>Ni·ªÅm tin v√†o gi√°o d·ª•c</h3>
                        <p>
                            C√¥ng ngh·ªá n√™n ph·ª•c v·ª• cho vi·ªác h·ªçc t·∫≠p d·ªÖ d√†ng v√†
                            th√∫ v·ªã h∆°n.
                        </p>
                    </div>
                    <div className={`${styles.valueCard} ${getAnimationClass('values', 'animateDelay2')}`}>
                        <div className={styles.valueIcon}>üß†</div>
                        <h3>Tr·∫£i nghi·ªám ng∆∞·ªùi d√πng l√† trung t√¢m</h3>
                        <p>
                            D·ªÖ d√πng, g·ªçn g√†ng, ph√π h·ª£p v·ªõi h·ªçc sinh v√† gi√°o
                            vi√™n.
                        </p>
                    </div>
                    <div className={`${styles.valueCard} ${getAnimationClass('values', 'animateDelay3')}`}>
                        <div className={styles.valueIcon}>üå±</div>
                        <h3>V√¨ c·ªông ƒë·ªìng h·ªçc t·∫≠p</h3>
                        <p>
                            H∆∞·ªõng t·ªõi h·ªó tr·ª£ tr∆∞·ªùng h·ªçc, gi√°o vi√™n v√† c√°c em h·ªçc
                            sinh m·ªôt c√°ch hi·ªáu qu·∫£, mi·ªÖn ph√≠ v√† b·ªÅn v·ªØng.
                        </p>
                    </div>
                </div>
            </section>

            <section
                ref={sectionRefs.teamRef}
                data-section="team"
                className={`${styles.teamSection} ${getAnimationClass('team')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <TeamOutlined className={styles.icon} /> Nh√≥m Ph√°t Tri·ªÉn
                </h2>
                <div className={styles.teamGrid}>
                    <div className={`${styles.teamCard} ${getAnimationClass('team', 'animateDelay1')}`}>
                        <div className={styles.teamMemberImg}>
                            <img
                                src="https://i.pinimg.com/736x/18/c2/96/18c29680423dc8ec13e290b7bd9917a5.jpg"
                                alt="V≈© Kh√°nh Huy·ªÅn"
                            />
                        </div>
                        <h3>V≈© Kh√°nh Huy·ªÅn</h3>
                        <p className={styles.teamRole}>frontend</p>
                        <p className={styles.teamDesc}>
                            Thi·∫øt k·∫ø v√† ph√°t tri·ªÉn giao di·ªán ng∆∞·ªùi d√πng. ƒêam m√™
                            UI/UX v√† mong mu·ªën t·∫°o ra tr·∫£i nghi·ªám h·ªçc t·∫≠p tr·ª±c
                            quan, d·ªÖ d√πng.
                        </p>
                    </div>

                    <div className={`${styles.teamCard} ${getAnimationClass('team', 'animateDelay2')}`}>
                        <div className={styles.teamMemberImg}>
                            <img
                                src="https://i.pinimg.com/736x/2a/67/91/2a67914c6fd71a84ef102d395e929015.jpg"
                                alt="Nguy·ªÖn B√° Ho√†ng Kim"
                            />
                        </div>
                        <h3>Nguy·ªÖn B√° Ho√†ng Kim</h3>
                        <p className={styles.teamRole}>backend</p>
                        <p className={styles.teamDesc}>
                            Ph·ª• tr√°ch h·ªá th·ªëng m√°y ch·ªß, API v√† c∆° s·ªü d·ªØ li·ªáu.
                            Y√™u th√≠ch ph√°t tri·ªÉn ph·∫ßn m·ªÅm gi√°o d·ª•c v√† c√°c gi·∫£i
                            ph√°p h·ªçc t·∫≠p hi·ªáu qu·∫£.
                        </p>
                    </div>
                </div>
                <p className={`${styles.teamNote} ${getAnimationClass('team', 'animateDelay3')}`}>
                    C·∫£ hai ƒë·ªÅu l√† sinh vi√™n nƒÉm cu·ªëi c·ªßa{' '}
                    <strong>ƒê·∫°i h·ªçc C√¥ng ngh·ªá (UET)</strong>, v·ªõi chung m·ªôt kh√°t
                    v·ªçng: bi·∫øn vi·ªác h·ªçc l·∫≠p tr√¨nh ph·∫ßn c·ª©ng tr·ªü n√™n d·ªÖ d√†ng v√†
                    th√∫ v·ªã h∆°n bao gi·ªù h·∫øt.
                </p>
            </section>

            <section
                ref={sectionRefs.contactRef}
                data-section="contact"
                id={'contact'}
                className={`${styles.contactSection} ${getAnimationClass('contact')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <MailOutlined className={styles.icon} /> Li√™n H·ªá
                </h2>
                <div className={styles.contactGrid}>
                    <div className={`${styles.contactItem} ${getAnimationClass('contact', 'animateDelay1')}`}>
                        <MailOutlined className={styles.contactIcon} />
                        <p>Email: lienhe@tenweb.com</p>
                    </div>
                    <div className={`${styles.contactItem} ${getAnimationClass('contact', 'animateDelay2')}`}>
                        <PhoneOutlined className={styles.contactIcon} />
                        <p>S·ªë ƒëi·ªán tho·∫°i: 0901 xxx xxx</p>
                    </div>
                    <div className={`${styles.contactItem} ${getAnimationClass('contact', 'animateDelay3')}`}>
                        <GlobalOutlined className={styles.contactIcon} />
                        <p>
                            M·∫°ng x√£ h·ªôi: <a href="#">Facebook</a> ‚Ä¢{' '}
                            <a href="#">YouTube</a> ‚Ä¢ <a href="#">TikTok</a>
                        </p>
                    </div>
                </div>
                <div className={`${styles.contactButton} ${getAnimationClass('contact', 'animateDelay3')}`}>
                    <button className={styles.primaryButton}>
                        Li√™n H·ªá Ngay
                    </button>
                </div>
            </section>

            <section
                ref={sectionRefs.galleryRef}
                data-section="gallery"
                className={`${styles.gallerySection} ${getAnimationClass('gallery')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <ExperimentOutlined className={styles.icon} /> H√¨nh ·∫¢nh & Video Minh H·ªça
                </h2>

                <div className={styles.galleryGrid}>
                    <div className={`${styles.galleryItem} ${getAnimationClass('gallery', 'animateDelay1')}`}>
                        <div className={styles.mediaWrapper}>
                            <img
                                src="src/components/AboutUs/image/block-image.png"
                                alt="H·ªçc t·∫≠p v·ªõi block"
                            />
                        </div>
                        <p>H·ªçc t·∫≠p v·ªõi Block</p>
                    </div>

                    <div className={`${styles.galleryItem} ${getAnimationClass('gallery', 'animateDelay1')}`}>
                        <div className={styles.mediaWrapper}>
                            <video autoPlay loop muted playsInline>
                                <source
                                    src="/src/components/AboutUs/image/block.mov"
                                    type="video/mp4"
                                />
                                Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ video.
                            </video>
                        </div>
                        <p>Video demo trang h·ªçc l·∫≠p tr√¨nh k√©o th·∫£</p>
                    </div>

                    <div className={`${styles.galleryItem} ${getAnimationClass('gallery', 'animateDelay1')}`}>
                        <div className={styles.mediaWrapper}>
                            <img
                                src="src/components/AboutUs/image/quiz.jpg"
                                alt="Trang l√†m b√†i t·∫≠p"
                            />
                        </div>
                        <p>H·ªçc sinh ƒëang l√†m b√†i t·∫≠p</p>
                    </div>

                    <div className={`${styles.galleryItem} ${getAnimationClass('gallery', 'animateDelay1')}`}>
                        <div className={styles.mediaWrapper}>
                            <img
                                src="src/components/AboutUs/image/teacher.png"
                                alt="Giao di·ªán qu·∫£n l√Ω l·ªõp h·ªçc"
                            />
                        </div>
                        <p>Giao di·ªán qu·∫£n l√Ω l·ªõp h·ªçc c·ªßa gi√°o vi√™n</p>
                    </div>
                </div>
            </section>

        </div>
    )
};

export default AboutUs;