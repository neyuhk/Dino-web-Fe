import React, { useEffect, useRef, useState } from 'react';
import styles from './AboutUs.module.css';
import { RocketOutlined, ExperimentOutlined, ToolOutlined, TeamOutlined, MailOutlined, PhoneOutlined, GlobalOutlined } from '@ant-design/icons';

// Import media assets
import blockImage from './image/block-image.png';
import blockVideo from './image/block.mov';
import quizImage from './image/quiz.jpg';
import teacherImage from './image/teacher.png';

const AboutUs: React.FC = () => {
    const sectionRefs = {
        heroRef: useRef<HTMLElement>(null),
        missionRef: useRef<HTMLElement>(null),
        fieldsRef: useRef<HTMLElement>(null),
        storyRef: useRef<HTMLElement>(null),
        valuesRef: useRef<HTMLElement>(null),
        teamRef: useRef<HTMLElement>(null),
        contactRef: useRef<HTMLElement>(null),
        galleryRef: useRef<HTMLElement>(null),
    };

    useEffect(() => {
        const hash = window.location.hash;
        if (hash) {
            const element = document.querySelector(hash);
            if (element) {
                setTimeout(() => {
                    element.scrollIntoView({
                        behavior: 'smooth',
                        block: 'center',
                    });
                }, 100);
            }
        }
    }, []);

    const [visibleSections, setVisibleSections] = useState<Record<string, boolean>>({
        hero: false,
        mission: false,
        fields: false,
        story: false,
        values: false,
        team: false,
        contact: false,
        gallery: false,
    });

    useEffect(() => {
        const observerOptions = {
            root: null,
            rootMargin: '0px',
            threshold: 0.2,
        };

        const observerCallback = (entries: IntersectionObserverEntry[]) => {
            entries.forEach((entry) => {
                const sectionName = entry.target.getAttribute('data-section');
                if (sectionName) {
                    setVisibleSections((prev) => ({
                        ...prev,
                        [sectionName]: entry.isIntersecting,
                    }));
                }
            });
        };

        const observer = new IntersectionObserver(observerCallback, observerOptions);

        Object.values(sectionRefs).forEach((ref) => {
            if (ref.current) {
                observer.observe(ref.current);
            }
        });

        return () => {
            observer.disconnect();
        };
    }, []);

    const getAnimationClass = (sectionName: string, delayClass?: string) => {
        return visibleSections[sectionName]
            ? `${styles.sectionAnimation} ${delayClass ? styles[delayClass] : ''}`
            : '';
    };

    return (
        <div className={styles.aboutContainer}>
            <section
                ref={sectionRefs.heroRef}
                data-section="hero"
                className={`${styles.heroSection} ${getAnimationClass('hero')}`}
            >
                <div className={styles.heroBackground}></div>
                <div className={styles.heroOverlay}></div>
                <div className={styles.heroContent}>
                    <h1 className={styles.mainTitle}>V·ªÅ Ch√∫ng T√¥i</h1>
                    <p className={styles.description}>
                        <strong>N·ªÅn t·∫£ng h·ªçc l·∫≠p tr√¨nh k√©o th·∫£ ‚Äì h·ªó tr·ª£ xu·∫•t m√£ ra ph·∫ßn c·ª©ng</strong> nh∆∞ Arduino.
                        Trang web ƒë∆∞·ª£c thi·∫øt k·∫ø d√†nh cho h·ªçc sinh, gi√°o vi√™n v√† nh√† tr∆∞·ªùng, mang ƒë·∫øn m√¥i tr∆∞·ªùng h·ªçc t·∫≠p
                        hi·ªán ƒë·∫°i, tr·ª±c quan v√† d·ªÖ ti·∫øp c·∫≠n.
                    </p>
                    <p className={styles.description}>
                        T·∫°i ƒë√¢y, h·ªçc sinh c√≥ th·ªÉ tham gia c√°c <strong>kh√≥a h·ªçc l·∫≠p tr√¨nh</strong>, th·ª±c h√†nh tr·ª±c ti·∫øp
                        v·ªõi ph·∫ßn c·ª©ng, l√†m b√†i t·∫≠p v√† theo d√µi ti·∫øn ƒë·ªô.
                        Gi√°o vi√™n c√≥ th·ªÉ <strong>t·∫°o v√† qu·∫£n l√Ω l·ªõp h·ªçc</strong>, giao b√†i t·∫≠p, ch·∫•m ƒëi·ªÉm v√† h·ªó tr·ª£ h·ªçc
                        sinh trong qu√° tr√¨nh h·ªçc l·∫≠p tr√¨nh ph·∫ßn c·ª©ng.
                    </p>
                </div>
            </section>

            <section
                ref={sectionRefs.missionRef}
                data-section="mission"
                className={`${styles.missionSection} ${getAnimationClass('mission')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <RocketOutlined className={styles.icon} /> S·ª© M·ªánh
                </h2>
                <p>Ch√∫ng t√¥i mong mu·ªën ƒëem ƒë·∫øn:</p>
                <ul className={styles.missionList}>
                    <li>Tr·∫£i nghi·ªám h·ªçc l·∫≠p tr√¨nh ƒë∆°n gi·∫£n, sinh ƒë·ªông, ph√π h·ª£p v·ªõi m·ªçi h·ªçc sinh.</li>
                    <li>Gi·∫£i ph√°p hi·ªáu qu·∫£ cho gi√°o vi√™n trong vi·ªác gi·∫£ng d·∫°y l·∫≠p tr√¨nh ph·∫ßn c·ª©ng.</li>
                    <li>C·∫ßu n·ªëi gi·ªØa c√¥ng ngh·ªá v√† gi√°o d·ª•c hi·ªán ƒë·∫°i, th√∫c ƒë·∫©y phong tr√†o STEM trong tr∆∞·ªùng h·ªçc.</li>
                </ul>
            </section>

            <section
                ref={sectionRefs.fieldsRef}
                data-section="fields"
                className={`${styles.fieldsSection} ${getAnimationClass('fields')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <ExperimentOutlined className={styles.icon} /> Lƒ©nh V·ª±c Ho·∫°t ƒê·ªông
                </h2>
                <div className={styles.fieldsGrid}>
                    <div className={`${styles.fieldCard} ${getAnimationClass('fields', 'animateDelay1')}`}>
                        <div className={styles.fieldIcon}>üéì</div>
                        <div className={styles.fieldTitle}>Gi√°o d·ª•c c√¥ng ngh·ªá (EdTech)</div>
                    </div>
                    <div className={`${styles.fieldCard} ${getAnimationClass('fields', 'animateDelay2')}`}>
                        <div className={styles.fieldIcon}>üß©</div>
                        <div className={styles.fieldTitle}>L·∫≠p tr√¨nh k√©o th·∫£ tr·ª±c quan</div>
                    </div>
                    <div className={`${styles.fieldCard} ${getAnimationClass('fields', 'animateDelay1')}`}>
                        <div className={styles.fieldIcon}>ü§ñ</div>
                        <div className={styles.fieldTitle}>L·∫≠p tr√¨nh ph·∫ßn c·ª©ng (Arduino, IoT)</div>
                    </div>
                    <div className={`${styles.fieldCard} ${getAnimationClass('fields', 'animateDelay2')}`}>
                        <div className={styles.fieldIcon}>üë®‚Äçüè´</div>
                        <div className={styles.fieldTitle}>H·ªó tr·ª£ gi√°o vi√™n v√† nh√† tr∆∞·ªùng</div>
                    </div>
                </div>
            </section>

            <section
                ref={sectionRefs.galleryRef}
                data-section="gallery"
                className={`${styles.gallerySection} ${getAnimationClass('gallery')}`}
            >
                <h2 className={styles.sectionTitle}>
                    <ExperimentOutlined className={styles.icon} /> H√¨nh ·∫¢nh & Video Minh H·ªça
                </h2>
                <div className={styles.galleryGrid}>
                    <div className={`${styles.galleryItem} ${getAnimationClass('gallery', 'animateDelay1')}`}>
                        <div className={styles.mediaWrapper}>
                            <img src={blockImage} alt="H·ªçc t·∫≠p v·ªõi block" />
                        </div>
                        <p>H·ªçc t·∫≠p v·ªõi Block</p>
                    </div>
                    <div className={`${styles.galleryItem} ${getAnimationClass('gallery', 'animateDelay1')}`}>
                        <div className={styles.mediaWrapper}>
                            <video autoPlay loop muted playsInline>
                                <source src={blockVideo} type="video/mp4" />
                                Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ video.
                            </video>
                        </div>
                        <p>Video demo trang h·ªçc l·∫≠p tr√¨nh k√©o th·∫£</p>
                    </div>
                    <div className={`${styles.galleryItem} ${getAnimationClass('gallery', 'animateDelay1')}`}>
                        <div className={styles.mediaWrapper}>
                            <img src={quizImage} alt="Trang l√†m b√†i t·∫≠p" />
                        </div>
                        <p>H·ªçc sinh ƒëang l√†m b√†i t·∫≠p</p>
                    </div>
                    <div className={`${styles.galleryItem} ${getAnimationClass('gallery', 'animateDelay1')}`}>
                        <div className={styles.mediaWrapper}>
                            <img src={teacherImage} alt="Giao di·ªán qu·∫£n l√Ω l·ªõp h·ªçc" />
                        </div>
                        <p>Giao di·ªán qu·∫£n l√Ω l·ªõp h·ªçc c·ªßa gi√°o vi√™n</p>
                    </div>
                </div>
            </section>
        </div>
    );
};

export default AboutUs;
